version: "2"

run:
  modules-download-mode: readonly
  timeout: 10m

output:
  formats:
    tab:
      path: stdout

formatters:
  enable:
    - gci # controls golang package import order and makes it always deterministic

linters:
  enable:
    ## enabled by default
    - errcheck # checking for unchecked errors, these unchecked errors can be critical bugs in some cases
    - govet # reports suspicious constructs, such as Printf calls whose arguments do not align with the format string
    - ineffassign # detects when assignments to existing variables are not used
    - staticcheck # is a go vet on steroids, applying a ton of static analysis checks
    - unused # checks for unused constants, variables, functions and types
    ## disabled by default
    - asasalint # checks for pass []any as any in variadic func(...any)
    - asciicheck # checks that your code does not contain non-ASCII identifiers
    - durationcheck # checks for two durations multiplied together
    - errname # checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error
    - errorlint # finds code that will cause problems with the error wrapping scheme introduced in Go 1.13
    - copyloopvar # checks for pointers to enclosing loop variables
    - gochecknoglobals # checks that no global variables exist
    - goconst # finds repeated strings that could be replaced by a constant
    - gocritic # provides diagnostics that check for bugs, performance and style issues
    - godox # detects TODOs keywords
    # - goimports # in addition to fixing imports, goimports also formats your code in the same style as gofmt. Dissabled as can't work together with `gci`
    - mnd # detects magic numbers
    # - gomoddirectives # manages the use of 'replace', 'retract', and 'excludes' directives in go.mod
    - nestif # reports deeply nested if statements
    - nilerr # finds the code that returns nil even if it checks that the error is not nil
    - nilnil # checks that there is no simultaneous return of nil error and an invalid value
    # - revive # fast, configurable, extensible, flexible, and beautiful linter for Go, drop-in replacement of golint
    - unconvert # removes unnecessary type conversions
    - unparam # reports unused function parameters
    - whitespace # detects leading and trailing whitespace

  # This file contains only configs which differ from defaults.
  # All possible options can be found here https://github.com/golangci/golangci-lint/blob/master/.golangci.reference.yml
  settings:
    gocritic:
      # Settings passed to gocritic.
      # The settings key is the name of a supported gocritic checker.
      # The list of supported checkers can be find in https://go-critic.github.io/overview.
      settings:
        captLocal:
          # Whether to restrict checker to params only.
          # Default: true
          paramsOnly: false
        underef:
          # Whether to skip (*x).method() calls where x is a pointer receiver.
          # Default: true
          skipRecvDeref: false

    mnd:
      # List of function patterns to exclude from analysis.
      # Values always ignored: `time.Date`,
      # `strconv.FormatInt`, `strconv.FormatUint`, `strconv.FormatFloat`,
      # `strconv.ParseInt`, `strconv.ParseUint`, `strconv.ParseFloat`.
      # Default: []
      ignored-functions:
        - os.Chmod
        - os.Mkdir
        - os.MkdirAll
        - os.OpenFile
        - os.WriteFile

    govet:
      # Enable all analyzers.
      # Default: false
      enable-all: true
      # Disable analyzers by name.
      # Run `go tool vet help` to see all analyzers.
      # Default: []
      disable:
        - fieldalignment # too strict
        - printf # too strict
      # Settings per analyzer.
      settings:
        shadow:
          # Whether to be strict about shadowing; can be noisy.
          # Default: false
          strict: false
  exclusions:
    rules:
      - source: "(noinspection|TODO)"
        linters:
          - godot
      - source: "//noinspection"
        linters:
          - gocritic
      - path: "_test\\.go"
        linters:
          - goconst

issues:
  # Maximum count of issues with the same text.
  # Set to 0 to disable.
  # Default: 3
  max-same-issues: 5
